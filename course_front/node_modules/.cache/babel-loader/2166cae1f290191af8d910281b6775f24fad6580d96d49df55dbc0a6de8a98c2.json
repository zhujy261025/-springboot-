{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"margin\": \"15px\",\n    \"width\": \"1000px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_checkbox_group = _resolveComponent(\"a-checkbox-group\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_a_table, {\n    dataSource: $setup.roles,\n    columns: $setup.columns,\n    pagination: false\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      record\n    }) => [_createCommentVNode(\"        操作\"), column.key === 'action' ? (_openBlock(), _createBlock(_component_a_space, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: $event => $setup.edit(record)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"编辑\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\"])]), _createVNode(_component_a_modal, {\n    visible: $setup.visible,\n    \"onUpdate:visible\": _cache[3] || (_cache[3] = $event => $setup.visible = $event),\n    title: \"表单\",\n    \"confirm-loading\": $setup.confirmLoading,\n    onOk: $setup.handleOk\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\"      <p> 表单 </p>\"), _createVNode(_component_a_form, {\n      model: $setup.formState,\n      \"label-col\": $setup.labelCol,\n      \"wrapper-col\": $setup.wrapperCol\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        label: \"角色ID\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: $setup.formState.roleid,\n          \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.formState.roleid = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"角色名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: $setup.formState.rolename,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => $setup.formState.rolename = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        label: \"角色权限\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_checkbox_group, {\n          value: $setup.formState.power,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => $setup.formState.power = $event),\n          options: $setup.power\n        }, null, 8 /* PROPS */, [\"value\", \"options\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"label-col\", \"wrapper-col\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\", \"confirm-loading\", \"onOk\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACQA,KAAmC,EAAnC;IAAA;IAAA;EAAA;AAAmC;;;;;;;;;;6DAAzCC,oBAeM,OAfNC,UAeM,GAbJC,aAYUC;IAZAC,UAAU,EAAEC,YAAK;IAAGC,OAAO,EAAED,cAAO;IAAGE,UAAU,EAAE;;IAChDC,QAAQ,WAEjB,CAAiB;MAFIC,MAAM;MAAEC;IAAM,OAEnCC,iCAAiB,EACDF,MAAM,CAACG,GAAG,+BACxBC,aAGUC;MAAAF;IAAA;wBADR,MAA4D,CAA5DV,aAA4Da;QAAlDC,IAAI,EAAC,SAAS;QAAEC,OAAK,YAAEZ,WAAI,CAACK,MAAM;;0BAAG,MAAE,kBAAF,IAAE;;;;;;kDAS3DR,aAuBUgB;IAtBEC,OAAO,EAAEd,cAAO;4DAAPA,cAAO;IACxBe,KAAK,EAAC,IAAI;IACT,iBAAe,EAAEf,qBAAc;IAC/BgB,IAAE,EAAEhB;;sBAEP,MAAwB,CAAxBM,wCAAwB,EACxBT,aAcSoB;MAdAC,KAAK,EAAElB,gBAAS;MAAG,WAAS,EAAEA,eAAQ;MAAG,aAAW,EAAEA;;wBAC7D,MAEc,CAFdH,aAEcsB;QAFDC,KAAK,EAAC;MAAM;0BACvB,MAA4C,CAA5CvB,aAA4CwB;UAA3BC,KAAK,EAAEtB,gBAAS,CAACuB,MAAM;gEAAhBvB,gBAAS,CAACuB,MAAM;;;UAG1C1B,aAEcsB;QAFDC,KAAK,EAAC;MAAM;0BACvB,MAA8C,CAA9CvB,aAA8CwB;UAA7BC,KAAK,EAAEtB,gBAAS,CAACwB,QAAQ;gEAAlBxB,gBAAS,CAACwB,QAAQ;;;UAE5C3B,aAEcsB;QAFDC,KAAK,EAAC;MAAM;0BACvB,MAAqE,CAArEvB,aAAqE4B;UAA3CH,KAAK,EAAEtB,gBAAS,CAAC0B,KAAK;gEAAf1B,gBAAS,CAAC0B,KAAK;UAAGC,OAAO,EAAE3B","names":["style","_createElementVNode","_hoisted_1","_createVNode","_component_a_table","dataSource","$setup","columns","pagination","bodyCell","column","record","_createCommentVNode","key","_createBlock","_component_a_space","_component_a_button","type","onClick","_component_a_modal","visible","title","onOk","_component_a_form","model","_component_a_form_item","label","_component_a_input","value","roleid","rolename","_component_a_checkbox_group","power","options"],"sourceRoot":"","sources":["D:\\course\\src\\views\\Role.vue"],"sourcesContent":["<template>\r\n  <div  style=\"margin: 15px; width: 1000px\">\r\n\r\n    <a-table :dataSource=\"roles\" :columns=\"columns\" :pagination=\"false\">\r\n      <template #bodyCell=\"{ column, record }\">\r\n\r\n        <!--        操作-->\r\n        <template v-if=\"column.key === 'action'\">\r\n          <a-space>\r\n\r\n            <a-button type=\"primary\" @click=\"edit(record)\">编辑</a-button>\r\n          </a-space>\r\n        </template>\r\n\r\n      </template>\r\n    </a-table>\r\n  </div>\r\n\r\n\r\n  <a-modal\r\n      v-model:visible=\"visible\"\r\n      title=\"表单\"\r\n      :confirm-loading=\"confirmLoading\"\r\n      @ok=\"handleOk\"\r\n  >\r\n    <!--      <p> 表单 </p>-->\r\n    <a-form :model=\"formState\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\r\n      <a-form-item label=\"角色ID\"   >\r\n        <a-input v-model:value=\"formState.roleid\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item label=\"角色名称\">\r\n        <a-input v-model:value=\"formState.rolename\" />\r\n      </a-form-item>\r\n      <a-form-item label=\"角色权限\">\r\n        <a-checkbox-group v-model:value=\"formState.power\" :options=\"power\" />\r\n      </a-form-item>\r\n\r\n\r\n\r\n    </a-form>\r\n\r\n  </a-modal>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {message} from \"ant-design-vue\";\r\n\r\n\r\nexport default {\r\n  name: \"Role\",\r\n  setup(){\r\n    const roles = ref([]);\r\n    const columns = ref([\r\n      {\r\n        title: '角色ID',\r\n        dataIndex: 'roleid',\r\n        key:'roleid'\r\n      },\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'rolename',\r\n        key:'rolename'\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'action'\r\n      }\r\n\r\n\r\n    ]);\r\n\r\n    const power = ref([\r\n      { label: '教师管理', value: '1001' },\r\n      { label: '主任管理', value: '1002' },\r\n      { label: '公告管理', value: '2001' },\r\n      { label: '课程管理', value: '3001' },\r\n      { label: '听课管理', value: '3002' },\r\n      { label: '角色管理', value: '4001' },\r\n      { label: '修改密码', value: '4002' },\r\n    ]);\r\n    // 查询方法\r\n    const load = ()=>{\r\n      axios.get(\"api/queryRole\",{}).then(res=>{\r\n        console.log(res)\r\n        if (res.data.code === \"200\"){\r\n          roles.value = res.data.date\r\n        }else {\r\n          message.error(res.data.msg);\r\n        }\r\n      })\r\n    }\r\n\r\n    const formState = ref({});\r\n    const visible = ref(false);  // 对话框的开关\r\n    const confirmLoading = ref(false); // 确认按钮的加载\r\n    // 编辑的点击事件\r\n    const edit = (record) => {\r\n      formState.value = JSON.parse(JSON.stringify(record));\r\n      const powers = formState.value.power;\r\n      formState.value.power = powers.split(\",\");\r\n      visible.value = true;\r\n    };\r\n\r\n    // 对话框ok时会调用\r\n    const handleOk = () => {\r\n      confirmLoading.value = true;  // 开启确认按钮的加载\r\n      formState.value.power =  formState.value.power.toString();\r\n      axios.put(\"api/editRole\",formState.value).then(res=>{\r\n        confirmLoading.value = false;\r\n        visible.value = false;\r\n        console.log(res)\r\n        if (res.data.code === \"200\"){\r\n          load()\r\n          message.success(res.data.msg);\r\n        }else {\r\n          message.error(res.data.msg);\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n\r\n    onMounted(()=>{\r\n      load()\r\n    })\r\n    return {\r\n      roles,\r\n      columns,\r\n\r\n      labelCol: { style: { width: '130px' } },\r\n      wrapperCol: { span: 14 },\r\n      formState,\r\n      visible,\r\n      confirmLoading,\r\n      edit,\r\n      power,\r\n\r\n      handleOk\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { message } from 'ant-design-vue';\nimport axios from \"axios\";\nimport { onMounted, ref, computed } from \"vue\";\nimport store from \"@/store\";\nexport default {\n  name: \"Course\",\n  setup() {\n    const user = computed(() => store.state.user);\n    const notice = ref();\n    const columns = ref([{\n      title: '编号',\n      dataIndex: 'id',\n      key: 'id'\n    }, {\n      title: '标题',\n      dataIndex: 'title',\n      key: \"title\"\n    }, {\n      title: '创建人',\n      dataIndex: 'userid',\n      key: 'userid'\n    }, {\n      title: '内容',\n      dataIndex: 'content',\n      key: 'content'\n    }, {\n      title: '操作',\n      key: 'action'\n    }]);\n\n    // 查询方法\n    const load = () => {\n      console.log(\"load \");\n      axios.get(\"api/queryNotice\", {}).then(res => {\n        console.log(res);\n        if (res.data.code === \"200\") {\n          notice.value = res.data.date;\n        } else {\n          message.error(res.data.msg);\n        }\n      });\n    };\n\n    // 表单\n    const formState = ref({});\n    const visible = ref(false); // 对话框的开关\n    const confirmLoading = ref(false); // 确认按钮的加载\n\n    // 编辑的点击事件\n    const edit = record => {\n      // JSON.stringify(record) 转为为字符串\n      // JSON.parse(“str“) 转为json对象\n\n      formState.value = JSON.parse(JSON.stringify(record));\n      formState.value.id1 = record.id;\n      visible.value = true;\n    };\n\n    // 新增的点击事件\n    const add = () => {\n      formState.value = {}; // 清空表单数据\n      visible.value = true; // 打开对话框\n    };\n\n    // 对话框ok时会调用\n    const handleOk = () => {\n      confirmLoading.value = true; // 开启确认按钮的加载\n      formState.value.id = formState.value.id1;\n      formState.value.userid = user.value.id;\n      // 发送请求\n      axios.post(\"api/saveNotice\", formState.value).then(res => {\n        console.log(res);\n        confirmLoading.value = false; // 关闭确认按钮的加载\n        visible.value = false; // 关闭对话框\n        if (res.data.code === \"200\") {\n          load();\n          message.success(res.data.msg);\n        } else {\n          message.error(res.data.msg);\n        }\n      });\n    };\n\n    // 删除的点击事件\n    const del = id => {\n      // 发送请求\n      axios.delete(\"api/delNotice/\" + id).then(res => {\n        console.log(res);\n        if (res.data.code === \"200\") {\n          // 重新加载数据\n          load();\n          message.success(res.data.msg);\n        } else {\n          message.error(res.data.msg);\n        }\n      });\n    };\n    onMounted(() => {\n      load();\n    });\n    return {\n      columns,\n      notice,\n      // 表单\n      labelCol: {\n        style: {\n          width: '130px'\n        }\n      },\n      wrapperCol: {\n        span: 14\n      },\n      formState,\n      visible,\n      confirmLoading,\n      edit,\n      add,\n      handleOk,\n      del\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["message","axios","onMounted","ref","computed","store","name","setup","user","state","notice","columns","title","dataIndex","key","load","console","log","get","then","res","data","code","value","date","error","msg","formState","visible","confirmLoading","edit","record","JSON","parse","stringify","id1","id","add","handleOk","userid","post","success","del","delete","labelCol","style","width","wrapperCol","span"],"sourceRoot":"","sources":["E:\\WeChat Files\\wxid_77r24v1adq6c22\\FileStorage\\File\\2024-11\\前端代码\\courseweb\\course\\src\\views\\Notice.vue"],"sourcesContent":["<template>\r\n\r\n<!--  <a-table :dataSource=\"teacher\" :columns=\"columns\" />-->\r\n<!--        表格-->\r\n  <div  style=\"margin: 15px; width: 1000px\">\r\n    <a-button type=\"primary\" @click=\"add\" >新增</a-button>\r\n\r\n  <a-table :dataSource=\"notice\" :columns=\"columns\" :pagination=\"false\">\r\n    <template #bodyCell=\"{ column, record }\">\r\n\r\n      <!--        操作-->\r\n      <template v-if=\"column.key === 'action'\">\r\n        <a-space>\r\n\r\n          <a-button type=\"primary\" @click=\"edit(record)\">编辑</a-button>\r\n          <a-popconfirm\r\n              title=\"是否确认删除?\"\r\n              ok-text=\"是\"\r\n              cancel-text=\"否\"\r\n              @confirm=\"del(record.id)\"\r\n          >\r\n            <a-button type=\"primary\" danger>删除</a-button>\r\n          </a-popconfirm>\r\n        </a-space>\r\n      </template>\r\n\r\n    </template>\r\n  </a-table>\r\n  </div>\r\n\r\n\r\n  <a-modal\r\n      v-model:visible=\"visible\"\r\n      title=\"Title\"\r\n      :confirm-loading=\"confirmLoading\"\r\n      @ok=\"handleOk\"\r\n  >\r\n    <!--      <p> 表单 </p>-->\r\n    <a-form :model=\"formState\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\r\n      <a-form-item label=\"编号\" v-show=\"!!formState.id\"  >\r\n        <a-input v-model:value=\"formState.id1\" :disabled=\"!!formState.id\" />\r\n      </a-form-item>\r\n\r\n      <a-form-item label=\"标题\">\r\n        <a-input v-model:value=\"formState.title\" />\r\n      </a-form-item>\r\n\r\n\r\n      <a-form-item label=\"内容\">\r\n        <a-textarea v-model:value=\"formState.content\" :rows=\"4\" />\r\n      </a-form-item>\r\n\r\n\r\n    </a-form>\r\n\r\n  </a-modal>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { message } from 'ant-design-vue';\r\nimport axios from \"axios\"\r\nimport {onMounted, ref,computed} from \"vue\";\r\nimport store from \"@/store\";\r\nexport default {\r\n  name: \"Course\",\r\n  setup(){\r\n\r\n    const user = computed(()=> store.state.user )\r\n    const notice = ref();\r\n    const columns = ref([\r\n      {\r\n        title: '编号',\r\n        dataIndex: 'id',\r\n        key:'id'\r\n      },\r\n      {\r\n        title: '标题',\r\n        dataIndex: 'title',\r\n        key:\"title\"\r\n      },\r\n      {\r\n        title: '创建人',\r\n        dataIndex: 'userid',\r\n        key: 'userid'\r\n      },\r\n      {\r\n        title: '内容',\r\n        dataIndex: 'content',\r\n        key: 'content'\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'action'\r\n      }\r\n    ]);\r\n\r\n    // 查询方法\r\n    const load = ()=>{\r\n      console.log(\"load \")\r\n      axios.get(\"api/queryNotice\",{}).then(res=>{\r\n        console.log(res)\r\n        if (res.data.code === \"200\"){\r\n          notice.value = res.data.date\r\n        }else {\r\n          message.error(res.data.msg);\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    // 表单\r\n    const formState = ref({});\r\n    const visible = ref(false);  // 对话框的开关\r\n    const confirmLoading = ref(false); // 确认按钮的加载\r\n\r\n\r\n    // 编辑的点击事件\r\n    const edit = (record) => {\r\n      // JSON.stringify(record) 转为为字符串\r\n      // JSON.parse(“str“) 转为json对象\r\n\r\n      formState.value = JSON.parse(JSON.stringify(record));\r\n      formState.value.id1 = record.id\r\n      visible.value = true;\r\n    };\r\n\r\n    // 新增的点击事件\r\n    const add = () => {\r\n\r\n      formState.value = {}; // 清空表单数据\r\n      visible.value = true; // 打开对话框\r\n    };\r\n\r\n\r\n    // 对话框ok时会调用\r\n    const handleOk = () => {\r\n      confirmLoading.value = true;  // 开启确认按钮的加载\r\n      formState.value.id = formState.value.id1\r\n      formState.value.userid = user.value.id\r\n      // 发送请求\r\n      axios.post(\"api/saveNotice\",formState.value).then(res=>{\r\n        console.log(res)\r\n        confirmLoading.value = false; // 关闭确认按钮的加载\r\n        visible.value = false;  // 关闭对话框\r\n        if (res.data.code === \"200\"){\r\n          load()\r\n          message.success(res.data.msg);\r\n        }else {\r\n          message.error(res.data.msg);\r\n        }\r\n      })\r\n    }\r\n\r\n    // 删除的点击事件\r\n    const del = (id) => {\r\n      // 发送请求\r\n      axios.delete(\"api/delNotice/\" + id).then(res=>{\r\n        console.log(res)\r\n        if (res.data.code === \"200\"){\r\n          // 重新加载数据\r\n          load()\r\n          message.success(res.data.msg);\r\n        }else {\r\n          message.error(res.data.msg);\r\n        }\r\n      })\r\n    };\r\n\r\n    onMounted(()=>{\r\n\r\n      load()\r\n    })\r\n\r\n    return {\r\n      columns,\r\n      notice,\r\n\r\n\r\n      // 表单\r\n      labelCol: { style: { width: '130px' } },\r\n      wrapperCol: { span: 14 },\r\n      formState,\r\n      visible,\r\n      confirmLoading,\r\n      edit,\r\n      add,\r\n      handleOk,\r\n      del,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}